<?php
/**
 * stockfoto-nik cms
 * 
 * Error 404 view template
 *  
 * @author     Niklaus HÃ¶pfner <editor@nik-web.net>
 * @link       https://github.com/nik-web/stockfoto-nik
 * @license    http://opensource.org/licenses/MIT The MIT License (MIT)
 * @version    1.0.0
 * @since      1.0.0
 */

//Individual part of the placeholder use the same in the translation file
$path = '_module_application_view_error_404';

$applicationName = $this->applicationData()->renderName();

$title = sprintf($this->translate('title' . $path), $applicationName);
$this->headTitle($title);

$description = $this->translate('meta_description_content' . $path);

$keywords = $this->translate('meta_keywords_content' . $path);
$this->headMeta()
    ->appendName('description', $description)
    ->appendName('keywords', $keywords);
?>
<h1><?= $this->translate('h1' . $path); ?></h1>
<h2><?= $this->message; ?></h2>

<?php if (isset($this->reason) && $this->reason): ?>

<?php
$reasonMessage= '';
switch ($this->reason) {
    case 'error-controller-cannot-dispatch':
        $reasonMessage = $this->translate('p' . $path . '_message_unable');
        break;
    case 'error-controller-not-found':
        $reasonMessage = $this->translate('p' . $path . '_message_not_mapped');
        break;
    case 'error-controller-invalid':
        $reasonMessage = $this->translate('p' . $path . '_message_not_dispatchable');
        break;
    case 'error-router-no-match':
        $reasonMessage = $this->translate('p' . $path . '_message_not_matched');
        break;
    default:
        $reasonMessage = $this->translate('p' . $path . '_message_not_determine');
        break;
}
?>

<p><?= $reasonMessage; ?></p>

<?php endif; ?>

<?php if (isset($this->controller) && $this->controller): ?>

<dl>
    <dt><?= $this->translate('dt' . $path . '_controller'); ?>:</dt>
    <dd><?= $this->escapeHtml($this->controller); ?>
<?php
if (isset($this->controller_class)
    && $this->controller_class
    && $this->controller_class != $this->controller
) {
    echo '(' . sprintf($this->translate('dd' . $path . '_resolves'), $this->escapeHtml($this->controller_class)) . ')';
}
?>
    </dd>
</dl>

<?php endif; ?>

<?php if (isset($this->display_exceptions) && $this->display_exceptions): ?>

<?php if(isset($this->exception) && $this->exception instanceof Exception): ?>
<hr/>
<h2><?= $this->translate('h2' . $path . '_add_information'); ?>:</h2>
<h3><?= get_class($this->exception); ?></h3>
<dl>
    <dt><?= $this->translate('dt' . $path . '_file'); ?>:</dt>
    <dd>
        <pre><?= $this->exception->getFile(); ?>:<?= $this->exception->getLine(); ?></pre>
    </dd>
    <dt><?= $this->translate('dt' . $path . '_message'); ?>:</dt>
    <dd>
        <pre><?= $this->exception->getMessage(); ?></pre>
    </dd>
    <dt><?= $this->translate('dt' . $path . '_stack_trace'); ?>:</dt>
    <dd>
        <pre><?= $this->exception->getTraceAsString(); ?></pre>
    </dd>
</dl>
<?php
    $e = $this->exception->getPrevious();
    $icount = 0;
    if ($e) :
?>
<hr/>
<h2><?= $this->translate('h2' . $path . '_exceptions'); ?>:</h2>
<ul>
    <?php while($e) : ?>
    <li>
        <h3><?= get_class($e); ?></h3>
        <dl>
            <dt><?= $this->translate('defines_term' . $path . '_file'); ?>:</dt>
            <dd>
                <pre><?= $e->getFile(); ?>:<?php echo $e->getLine(); ?></pre>
            </dd>
            <dt><?= $this->translate('defines_term' . $path . '_message'); ?>:</dt>
            <dd>
                <pre><?= $e->getMessage(); ?></pre>
            </dd>
            <dt><?= $this->translate('dt' . $path . '_stack_trace'); ?>:</dt>
            <dd>
                <pre><?= $e->getTraceAsString(); ?></pre>
            </dd>
        </dl>
    </li>
    <?php
        $e = $e->getPrevious();
        $icount += 1;
        if ($icount >=50) {
    ?>
    <li>
        <?= $this->translate('li' . $path . '_more_exceptions'); ?>
    </li>
    <?php
    break;
        }
        endwhile;
    ?>
</ul>
<?php endif; ?>

<?php else: ?>

<h3><?= $this->translate('h3' . $path . '_no_exceptions'); ?></h3>

<?php endif; ?>

<?php endif; ?>
